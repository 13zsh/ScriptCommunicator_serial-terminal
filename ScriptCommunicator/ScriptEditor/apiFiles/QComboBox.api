QComboBox::setEnabled(bool isEnabled):void \nEnables or disables the widget.
QComboBox::hide(void):void \nHides the widget.
QComboBox::show(void):void \nShows the widget.
QComboBox::setBackgroundColor(QString color):void \nSets the background color of a script gui element. Possible colors are:\nblack, white, gray, red, green, blue, cyan, magenta and yellow.
QComboBox::setWindowTextColor(QString color):void \nSets the window text color of a script gui element. Possible colors are:\nblack, white, gray, red, green, blue, cyan, magenta and yellow.
QComboBox::setTextColor(QString color):void \nSets the text color of a script gui element. Possible colors are:\nblack, white, gray, red, green, blue, cyan, magenta and yellow.
QComboBox::setPaletteColor(QString palette, QString color):void \nSets a palette color of a script gui element.\nPossible palette values are: Base, Foreground, Background, WindowText, Window, Text and ButtonText.\nPossible colors are: black, white, gray, red, green, blue, cyan, magenta and yellow.
QComboBox::setPaletteColorRgb(quint8 red, quint8 green, quint8 blue, QString palette):void \nSets a palette color of a script gui element. Possible palette values are:\nBase, Foreground, Background, WindowText, Window, Text and ButtonText.
QComboBox::setToolTip(QString text, int duration):void \nSets the tool tip of the script gui element.\nIf the duration is -1 (default) the duration is calculated depending on the length of the tool tip.
QComboBox::isVisible(void):bool \nReturn true, if the widget is visible.
QComboBox::setFocus(void):void \nGives the keyboard input focus to this widget.
QComboBox::width(void):int \nReturns the width of the widget excluding any window frame.
QComboBox::height(void):int \nReturns the height of the widget excluding any window frame.
QComboBox::setAdditionalData(int key, QString data):void \nSets/stores an additional data entry.
QComboBox::getAdditionalData(int key):QString \nReturns an additional data entry.
QComboBox::blockSignals(bool block):bool \nIf block is true, signals emitted by this object are blocked\n(i.e., emitting a signal will not invoke anything connected to it).\nIf block is false, no such blocking will occur.\nThe return value is the previous value of the blocking state.
QComboBox::getClassName(void):QString \nReturns the class name of this object.
QComboBox::getPublicScriptElements(void):QString \nReturns a semicolon separated list with all public functions, signals and properties.
QComboBox::addItem(const QString text):void \nAdds one item to the combo box.
QComboBox::insertItem(int index, const QString text):void \nInserts one item into the combo box.
QComboBox::removeItem(int index):void \nRemoves one item from the combo box.
QComboBox::setEditable(bool editable):void \nSets the editable property of the combo box.\nIf the editable property is true, then the text of the selected item can be changed.
QComboBox::isEditable(void):bool \nReturns true if the combo box is editable.\nIf the editable property is true, then the text of the selected item can be changed.
QComboBox::currentIndex(void):int \nReturns the index of the current selected item.
QComboBox::currentText(void):QString \nReturns the text of the current selected item.
QComboBox::itemText(int index):QString \nReturns the item (identified by index) text.
QComboBox::setItemText(int index, const QString text):void \nSets the item (identified by index) text.
QComboBox::setCurrentText(const QString text):void \nSets the text of the current selected item.
QComboBox::setCurrentIndex(int index):void \nSets the index of the current selected item.
QComboBox::count(void):int \nReturns the number of items in the combo box.  
QComboBox::clear(void):void \nClears the combo box and removes all items.
QComboBox::currentTextChangedSignal.connect(QString newText) \nThis signal is emitted if the text of the current selected item has been changed\n(new index or the text has been modified).
QComboBox::currentIndexChangedSignal.connect(int currentSelectedIndex) \nThis signal is emitted if the current selected index has been changed.