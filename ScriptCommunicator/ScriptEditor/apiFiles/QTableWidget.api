QTableWidget::getPublicScriptElements(void):QString \nReturns a semicolon separated list with all public functions, signals and properties.
QTableWidget::getText(int row, int column):QString \nReturns the text of one cell.
QTableWidget::setCellIcon(int row, int column, QString iconFileName):void \nSets the icon of a single cell.
QTableWidget::setVerticalHeaderLabel(int row, QString text):void \nSets a vertical header label.
QTableWidget::setHorizontalHeaderLabel(int column, QString text):void \nSets a horizontal header label.
QTableWidget::setCellEditable(int row, int column, bool editable):void \nMakes on cell editable or not editable.
QTableWidget::setRowCount(int rows):void \nSets the row count.
QTableWidget::rowCount(void):int \nReturn the row count.
QTableWidget::setColumnCount(int columns):void \nSets the column count.
QTableWidget::columnCount(void):int \nReturns the column count.
QTableWidget::setCellBackgroundColor(QString color, int row, int column):void \nSets the background color of a single cell.\nPossible colors are: black, white, gray, red, green, blue, cyan, magenta and yellow.
QTableWidget::setCellForegroundColor(QString color, int row, int column):void \nSets the foreground color of a single cell.\nPossible colors are: black, white, gray, red, green, blue, cyan, magenta and yellow.
QTableWidget::resizeColumnToContents(int column):void \nResizes the column given to the size of its contents.
QTableWidget::resizeRowToContents(int row):void \nResizes the row given to the size of its contents.
QTableWidget::setRowHeight(int row, int height):void \nSets the height of the given row to be height.
QTableWidget::rowHeight(int row)int \nReturns the height of the given row.
QTableWidget::setColumnWidth(int column, int width):void \nSets the width of the given column to be width.
QTableWidget::columnWidth(int column):int \nReturns the width of the given column.
QTableWidget::frameWidth(void):int \nReturns the width of the frame that is drawn.
QTableWidget::verticalHeaderWidth(void):int \nReturns the width of the vertical header.
QTableWidget::verticalScrollBarWidth(void):int \nReturns the width of the vertical scroll bar.
QTableWidget::isVerticalScrollBarVisible(void):bool \nReturns true if the vertical scroll bar is visible.
QTableWidget::sortItems(int column, bool ascendingOrder=true):void \nSorts the items in the widget in the specified order(true=AscendingOrder,\nfalse=DescendingOrder) by the values in the given column.
QTableWidget::rowsCanBeMovedByUser(bool canBeMoved):void \nIf set to true the user can move a selected row up or down\n(while holding the left mouse button at the row and moving the mouse up and/or down).
QTableWidget::getAllSelectedCells(void):QVector<ScriptTableCellPosition> \nReturns the rows and columns of the selected cells.
QTableWidget::insertWidget(int row, int column, QString type):bool \nCreates and inserts a script widget into a table cell.Possible type values are:\nLineEdit, ComboBox, Button, CheckBox, SpinBox, DoubleSpinBox, VerticalSlider, HorizontalSlider\nDial, TimeEdit, DateEdit, DateTimeEdit, CalendarWidget, TextEdit
QTableWidget::setText(int row, int column, QString text):void \nSets the text of one cell.
QTableWidget::getWidget(int row, int column):ScriptWidget \nReturns the cell widget.
QTableWidget::insertRow(int row):void \Inserts one row at row.
QTableWidget::insertColumn(int column):void \nInserts one column at column.
QTableWidget::removeRow(int row):void \nRemoves the row at row.
QTableWidget::removeColumn(int column):void \nRemoves the column at column.
QTableWidget::clear(void):void \nClears the table (removes all cells).
QTableWidget::cellPressedSignal.connect(int row, int column) \nThis signal is emitted if the user has pressed a cell.
QTableWidget::cellClickedSignal.connect(int row, int column) \nThis signal is emitted if the user has clicked a cell.
QTableWidget::cellDoubleClickedSignal.connect(int row, int column) \nThis signal is emitted if the user has double clicked a cell.
QTableWidget::cellChangedSignal.connect(int row, int column) \nThis signal is emitted if a cell has been changed.
QTableWidget::horizontalHeaderSectionResizedSignal.connect(int logicalIndex, int oldSize, int newSize) \nThis signal is emitted if a horizontal header section is resized.\nThe section's logical number is specified by logicalIndex, the old size by oldSize, and the new size by newSize.
QTableWidget::cellSelectionChangedSignal.connect(void) \nThis signal is emitted whenever the selection changes.