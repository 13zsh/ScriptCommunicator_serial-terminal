ScriptPlotWidget::setEnabled(bool isEnabled):void \nEnables or disables the widget.
ScriptPlotWidget::hide(void):void \nHides the widget.
ScriptPlotWidget::show(void):void \nShows the widget.
ScriptPlotWidget::setBackgroundColor(String color):void \nSets the background color of a script gui element. Possible colors are:\nblack, white, darkGray, lightGray, darkRed, red, green, blue, cyan, magenta, darkGreen, darkBlue, darkCyan, darkMagenta, darkYellow and yellow.\nNote:\nFore some GUI elements (like the RadioButton) setAutoFillBackground must be called if the background color shall be changed and\nfor some other GUI elements (like the CheckBox) the background color cannot be changed.
ScriptPlotWidget::setWindowTextColor(String color):void \nSets the window text color of a script gui element. Possible colors are:\nblack, white, darkGray, lightGray, darkRed, red, green, blue, cyan, magenta, darkGreen, darkBlue, darkCyan, darkMagenta, darkYellow and yellow.
ScriptPlotWidget::setTextColor(String color):void \nSets the text color of a script gui element. Possible colors are:\nblack, white, darkGray, lightGray, darkRed, red, green, blue, cyan, magenta, darkGreen, darkBlue, darkCyan, darkMagenta, darkYellow and yellow.
ScriptPlotWidget::setPaletteColor(String palette, String color):void \nSets a palette color of a script gui element.\nPossible palette values are: Base, Button, Foreground, Background, WindowText, Window, Text and ButtonText.\nPossible colors are: black, white, darkGray, lige, cyan, magenta and yellow.
ScriptPlotWidget::setPaletteColorRgb(Number red, Number green, Number blue, String palette):void \nSets a palette color of a script gui element. Possible palette values are:\nBase, Button, Foreground, Background, WindowText, Window, Text and ButtonText.
ScriptPlotWidget::setToolTip(String text, Number duration):void \nSets the tool tip of the script gui element.\nIf the duration is -1 (default) the duration is calculated depending on the length of the tool tip.
ScriptPlotWidget::isVisible(void):bool \nReturn true, if the widget is visible.
ScriptPlotWidget::setFocus(void):void \nGives the keyboard input focus to this widget.
ScriptPlotWidget::width(void):Number \nReturns the width of the widget excluding any window frame.
ScriptPlotWidget::height(void):Number \nReturns the height of the widget excluding any window frame.
ScriptPlotWidget::setAdditionalData(Number key, String data):void \nSets/stores an additional data entry.
ScriptPlotWidget::getAdditionalData(Number key):String \nReturns an additional data entry.
ScriptPlotWidget::blockSignals(bool block):bool \nIf block is true, signals emitted by this object are blocked\n(i.e., emitting a signal will not invoke anything connected to it).\nIf block is false, no such blocking will occur.\nThe return value is the previous value of the blocking state.
ScriptPlotWidget::getClassName(void):String \nReturns the class name of this object.
ScriptPlotWidget::getObjectName(void):String \nReturns the name of this object (UI_'object name in the ui file').\nNote: This function returns only a not empty string for GUI elements from ui files\nor if the function setObjectName has been called for the current object.
ScriptPlotWidget::setObjectName(String name):void \nSets the name of the current object (can be retrieved with getObjectName).
ScriptPlotWidget::addGraph(String color, String penStyle, String name):Number \nThis function adds a graph to the diagram.
ScriptPlotWidget::setInitialAxisRanges(Number xRange, Number yMinValue, Number ymaxValue):void \nThis function sets the initial ranges of the diagram.
ScriptPlotWidget::setCurrentAxisRanges(Number xMinValue, Number xMaxValue, Number yMinValue, Number yMaxValue):void \nThe function sets the current ranges of the diagram.\nAutomatic update should be disabled.
ScriptPlotWidget::getCurrentAxisRanges(void):Object \nReturns an object wich holds the current view ranges of the diagram.\nUseful if the user moves or zoom the view.
ScriptPlotWidget::addDataToGraph(Number graphIndex, Number x, Number y):void \nThis function adds one point to a graph.
ScriptPlotWidget::getDataFromGraph(int graphIndex, double x, int count):Array \nThis function returns an array of up to count points after the specified x value. If count is negative it collects the values before the specified x value.
ScriptPlotWidget::setLineWidth(Number graphIndex, Number width):void \nThis function sets the line width in pixel of a graph.
ScriptPlotWidget::setAxisLabels(String xAxisLabel, String yAxisLabel):void \nSets the axis label.
ScriptPlotWidget::showLegend(bool show):void \nThis function shows or hides the diagram legend.
ScriptPlotWidget::clearGraphs(void):void \nThis function clears the data of all graphs.
ScriptPlotWidget::removeAllGraphs(void):void \nThis function removes all graphs.
ScriptPlotWidget::showHelperElements(bool showXRange, bool showYRange, bool showUpdate, bool showSave, bool showLoad, bool showClear, bool showGraphVisibility, Number graphVisibilityMaxSize=80, bool showLegend=true):void \nSets the visibility of several plot widget elements.
ScriptPlotWidget::setMaxDataPointsPerGraph(Number maxDataPointsPerGraph):void \nSets tThe max. number of data points per graph (the default is 10.000.000).
ScriptPlotWidget::setAutoUpdate(bool enabled):void \nSets the automatic update enabled state.
ScriptPlotWidget::autoUpdate(void):bool \nReturns the automatic update enabled state.
ScriptPlotWidget::setUpdateInterval(Number updateInterval):void \nSets the update-interval.
ScriptPlotWidget::updatePlot(void):void \nRepaints the plot widget.
ScriptPlotWidget::setScatterStyle(Number graphIndex, String style, Number size):void \nSets the visual appearance of single data points in the plot.\nPossible values for style:\nNone: No scatter symbols are drawn.\nDot: A single pixel.\nCross: A cross.\nPlus: A plus.\nCircle: A circle.\nDisc: A circle which is filled with the pen's color.\nSquare: A square.\nDiamond: A diamond.\nStar: A star with eight arms, i.e. a combination of cross and plus.\nTriangle: An equilateral triangle, standing on baseline.\nTriangleInverted: An equilateral triangle, standing on corner.\nCrossSquare: A square with a cross inside.\nPlusSquare: A square with a plus inside.\nCrossCircle: A circle with a cross inside.\nPlusCircle: A circle with a plus inside.\nPeace: A circle, with one vertical and two downward diagonal lines.
ScriptPlotWidget::setLineStyle(Number graphIndex, String style):void \nSets the line style of a graph.\nPossible values for style:\nData points are not connected with any lines (e.g. data only represented with symbols according to the scatter style (is set with setScatterStyle)).\n Line: Data points are connected by a straight line.\n StepLeft: Line is drawn as steps where the step height is the value of the left data point.\n StepRight: Line is drawn as steps where the step height is the value of the right data point.\n StepCenter: Line is drawn as steps where the step is in between two data points.\n Impulse: Each data point is represented by a line parallel to the value axis, which reaches from the data point to the zero-value-line.
ScriptPlotWidget::removeDataRangeFromGraph(Number graphIndex, Number xFrom, Number xTo):void \nRemoves all data poNumbers with (sort-)keys between xFrom and xTo.\nIf xFrom is greater or equal to xTo, the function does nothing.
ScriptPlotWidget::plotMousePressSignal.connect(Number xValue, Number yValue, Number mouseButton) \nIs emitted if the user press a mouse button inside the plot.\nNote: mouseButton has the type Qt::MouseButton.
ScriptPlotWidget::clearButtonPressedSignal.connect(void) \nIs emitted if the user clicks the clear button.