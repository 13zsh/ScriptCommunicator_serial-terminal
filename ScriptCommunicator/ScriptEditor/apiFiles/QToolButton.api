QToolButton::setEnabled(bool isEnabled):void \nEnables or disables the widget.
QToolButton::update(void):void \nUpdates the widget.
QToolButton::repaint(void):void \nRepaints the widget.
QToolButton::show(void):void \nShows the widget.
QToolButton::void close(void) \nCloses the widget.
QToolButton::hide(void):void \nHides the widget.
QToolButton::setWindowTitle(QString title)_void \nSets the window title.
QToolButton::windowPositionAndSize(void):QString \nReturns the window size and position (Pixel).The return string has following format:\n"top left x, top left y, width, height"
QToolButton::setWindowPositionAndSize(QString positionAndSize):void \nSets the position and the size of a window). String format:\n"top left x, top left y, width, height".
QToolButton::setBackgroundColor(QString color):void \nSets the background color of a script gui element. Possible colors are:\nblack, white, gray, red, green, blue, cyan, magenta and yellow.
QToolButton::setWindowTextColor(QString color):void \nSets the window text color of a script gui element. Possible colors are:\nblack, white, gray, red, green, blue, cyan, magenta and yellow.
QToolButton::setTextColor(QString color):void \nSets the text color of a script gui element. Possible colors are:\nblack, white, gray, red, green, blue, cyan, magenta and yellow.
QToolButton::setPaletteColor(QString palette, QString color):void \nSets a palette color of a script gui element.\nPossible palette values are: Base, Foreground, Background, WindowText, Window, Text and ButtonText.\nPossible colors are: black, white, gray, red, green, blue, cyan, magenta and yellow.
QToolButton::setPaletteColorRgb(quint8 red, quint8 green, quint8 blue, QString palette):void \nSets a palette color of a script gui element. Possible palette values are:\nBase, Foreground, Background, WindowText, Window, Text and ButtonText.
QToolButton::setToolTip(QString text, int duration):void \nSets the tool tip of the script gui element.\nIf the duration is -1 (default) the duration is calculated depending on the length of the tool tip.
QToolButton::isVisible(void):bool \nReturn true, if the widget is visible.
QToolButton::raise(void):void \nRaises this widget to the top of the parent widget's stack.
QToolButton::lower(void):void \nLowers the widget to the bottom of the parent widget's stack.
QToolButton::setWindowFlags(quint32 flags):void \nSets the window flags.\nNote: ScriptWidget::show must be called after a setWindowFlags call.
QToolButton::clearWindowFlags(quint32 flags):void \nClears the given window flags.\nNote: ScriptWidget::show must be called after a clearWindowFlags call.
QToolButton::windowFlags(void):quint32 \nReturns the window flags.
QToolButton::setFocus(void):void \nGives the keyboard input focus to this widget.
QToolButton::width(void):int \nReturns the width of the widget excluding any window frame.
QToolButton::height(void):int \nReturns the height of the widget excluding any window frame.
QToolButton::getWidgetPointer(void):QWidget* \nReturns the widget pointer.
QToolButton::setAdditionalData(int key, QString data):void \nSets/stores an additional data entry.
QToolButton::getAdditionalData(int key):QString \nReturns an additional data entry.
QToolButton::blockSignals(bool block):bool \nIf block is true, signals emitted by this object are blocked\n(i.e., emitting a signal will not invoke anything connected to it).\nIf block is false, no such blocking will occur.\nThe return value is the previous value of the blocking state.
QToolButton::getClassName(void):QString \nReturns the class name of this object.
QToolButton::getPublicScriptElements(void):QString \nReturns a semicolon separated list with all public functions, signals and properties.
QToolButton::setText(QString text):void \nSets the button text.
QToolButton::text(void):QString \nReturns the button text.
QToolButton::setIcon(QString iconFileName):void \nSets the icon of the button.
QToolButton::clickedSignal.connect(void) \nThis signal is emitted if the user presses the button.