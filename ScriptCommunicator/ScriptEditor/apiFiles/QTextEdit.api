QTextEdit::setEnabled(bool isEnabled):void \nEnables or disables the widget.
QTextEdit::update(void):void \nUpdates the widget.
QTextEdit::repaint(void):void \nRepaints the widget.
QTextEdit::show(void):void \nShows the widget.
QTextEdit::void close(void) \nCloses the widget.
QTextEdit::hide(void):void \nHides the widget.
QTextEdit::setWindowTitle(QString title)_void \nSets the window title.
QTextEdit::windowPositionAndSize(void):QString \nReturns the window size and position (Pixel).The return string has following format:\n"top left x, top left y, width, height"
QTextEdit::setWindowPositionAndSize(QString positionAndSize):void \nSets the position and the size of a window). String format:\n"top left x, top left y, width, height".
QTextEdit::setBackgroundColor(QString color):void \nSets the background color of a script gui element. Possible colors are:\nblack, white, gray, red, green, blue, cyan, magenta and yellow.
QTextEdit::setWindowTextColor(QString color):void \nSets the window text color of a script gui element. Possible colors are:\nblack, white, gray, red, green, blue, cyan, magenta and yellow.
QTextEdit::setTextColor(QString color):void \nSets the text color of a script gui element. Possible colors are:\nblack, white, gray, red, green, blue, cyan, magenta and yellow.
QTextEdit::setPaletteColor(QString palette, QString color):void \nSets a palette color of a script gui element.\nPossible palette values are: Base, Foreground, Background, WindowText, Window, Text and ButtonText.\nPossible colors are: black, white, gray, red, green, blue, cyan, magenta and yellow.
QTextEdit::setPaletteColorRgb(quint8 red, quint8 green, quint8 blue, QString palette):void \nSets a palette color of a script gui element. Possible palette values are:\nBase, Foreground, Background, WindowText, Window, Text and ButtonText.
QTextEdit::setToolTip(QString text, int duration):void \nSets the tool tip of the script gui element.\nIf the duration is -1 (default) the duration is calculated depending on the length of the tool tip.
QTextEdit::isVisible(void):bool \nReturn true, if the widget is visible.
QTextEdit::raise(void):void \nRaises this widget to the top of the parent widget's stack.
QTextEdit::lower(void):void \nLowers the widget to the bottom of the parent widget's stack.
QTextEdit::setWindowFlags(quint32 flags):void \nSets the window flags.\nNote: ScriptWidget::show must be called after a setWindowFlags call.
QTextEdit::clearWindowFlags(quint32 flags):void \nClears the given window flags.\nNote: ScriptWidget::show must be called after a clearWindowFlags call.
QTextEdit::windowFlags(void):quint32 \nReturns the window flags.
QTextEdit::setFocus(void):void \nGives the keyboard input focus to this widget.
QTextEdit::width(void):int \nReturns the width of the widget excluding any window frame.
QTextEdit::height(void):int \nReturns the height of the widget excluding any window frame.
QTextEdit::getWidgetPointer(void):QWidget* \nReturns the widget pointer.
QTextEdit::setAdditionalData(int key, QString data):void \nSets/stores an additional data entry.
QTextEdit::getAdditionalData(int key):QString \nReturns an additional data entry.
QTextEdit::blockSignals(bool block):bool \nIf block is true, signals emitted by this object are blocked\n(i.e., emitting a signal will not invoke anything connected to it).\nIf block is false, no such blocking will occur.\nThe return value is the previous value of the blocking state.
QTextEdit::getClassName(void):QString \nReturns the class name of this object.
QTextEdit::getPublicScriptElements(void):QString \nReturns a semicolon separated list with all public functions, signals and properties.
QTextEdit::verticalScrollBarValue(void):int \nReturns the vertical scroll bar value.
QTextEdit::verticalScrollBarSetValue(int value):void \nSets the vertical scroll bar value.
QTextEdit::toPlainText(void):QString \nReturns the content of the text edit as plain text.
QTextEdit::toHtml(void):QString \nReturns the content of the text edit as html.
QTextEdit::setMaxChars(int maxChars):void \nSets the max. number of chars in the text edit.
QTextEdit::replaceNonHtmlChars(QString text):QString \nReplaces the characters '\n',' ', '<' and '>' to their html representation.
QTextEdit::moveTextPositionToEnd(void):void \nMoves the curser to the end of the text edit.
QTextEdit::setFontPointSize(qreal fontSize):void \nSets font size.
QTextEdit::setFontFamily(QString fontFamily):void \nSets font family.
QTextEdit::clear(void):void \nSlears the text edit.
QTextEdit::insertPlainText(QString text, bool atTheEnd=true):void \nInserts plain text into the text edit.
QTextEdit::insertHtml(QString htmlString, bool atTheEnd=true):void \nInserts HTML text into the text edit.
QTextEdit::append(QString text):void \nAppends text at the end of text edit (includes a new line) and moves the cursor to the end of the text.
QTextEdit::setPlainText(QString text):void \nSets the text of the text edit (plain text).
QTextEdit::setText(QString text):void \nSets the text of the text edit.
QTextEdit::lockScrolling(bool lock):void \nLocks or unlocks the scrolling of the vertical scroll bar.
QTextEdit::textChangedSignal.connect(void) \nThis signal is emitted if the text of the text edit has been changed.